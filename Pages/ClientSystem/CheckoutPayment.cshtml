@page
@model ViesbucioPuslapis.Pages.ClientSystem.CheckoutPaymentModel
@{
    ViewData[""] = true;
}

<script src="https://www.paypal.com/sdk/js?client-id=@(Model.PaypalClientId)&currency=USD"></script>

<div class="p-5" style="background-color: #08618d;">
    <div class="mx-auto p-3 bg-light rounded border" style="width: 420px;">
        <h2 class= "text-black-center mb-5">Užbaikite savo rezervaciją</h2>
        <div class="row mb-3">
            <div class="col-5">Kambario numeris</div>
            <div class="col-7">@Model.RoomNr</div>
        </div>
         <div class="row mb-3">
            <div class="col-5">Dienų kiekis</div>
            <div class="col-7">@Model.Days</div>
        </div>
        <div class="row mb-3">
            <div class="col-5">Kaina</div>
            <div class="col-7">@(Model.Cost)$</div>
        </div>
       <br />
       <div id="notification-container"></div>
       <div id="paypal-button-container"></div>
    </div>
</div>

<script>
    let paypal_buttons = paypal.Buttons({
        createOrder() {
            return fetch("/ClientSystem/CheckoutPayment?handler=CreateOrder", {
                method: "POST"
            })
                .then((response) => response.json())
                .then((order) => order.id);
        },

        onApprove(data) {
            paypal_buttons.close();

            // This function captures the funds from the transaction.
            return fetch("/ClientSystem/CheckoutPayment?handler=CompleteOrder", {
                method: "POST",
                headers:{
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    orderID: data.orderID
                })
            })
                .then((response) => response.json())
                .then((details) => {
                    if(details == "success"){
                        document.getElementById("notification-container").innerHTML =
                        '<div class="alert alert-success" role="alert">The order is created successfully!</div>';
                    }
                    else{
                        document.getElementById("notification-container").innerHTML =
                            '<div class="alert alert-danger" role="alert">Failed</div>';
                    }
                    
                });
        },

        onCancel(data) {
            document.getElementById("notification-container").innerHTML =
                '<div class="alert alert-danger" role="alert">Rezervacija atsaukta!</div>';


            return fetch("/ClientSystem/CheckoutPayment?handler=CancelOrder", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    orderID: data.orderID
                })
            });

        },
        onError(data) {
            document.getElementById("notification-container").innerHTML =
                '<div class="alert alert-danger" role="alert">Ivyko klaida!</div>';
        }
    });
    paypal_buttons.render('#paypal-button-container');
</script>

<div class="text-center">
    <a class="text-dark" asp-area="" asp-page="/RoomSystem/RoomTypes">Grįžti į kambarių tipus</a>
</div>

<div class="text-center">
    <a class="text-dark" asp-area="" asp-page="/RoomSystem/OwnedReservation">Grįžti į savo rezervaciją</a>
</div>
